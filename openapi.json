openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
servers:
  - url: https://55gdlc2st8.execute-api.us-east-1.amazonaws.com
    description: Production server
paths:
  /:
    get:
      tags:
        - HealthCheck
      summary: Health Check
      operationId: health_check__get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v2/assistant/create_with_tools:
    post:
      tags:
        - Assistants V2
      summary: Create Assistant With Tools Endpoint
      operationId: create_assistant_with_tools_endpoint_api_v2_assistant_create_with_tools_post
      parameters:
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAssistantWithToolsRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/assistant/create_assistant:
    post:
      tags:
        - Assistants V2
      summary: Create Assistant
      operationId: create_assistant_api_v2_assistant_create_assistant_post
      parameters:
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAssistantRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/assistant/list_assistants:
    get:
      tags:
        - Assistants V2
      summary: Get Openai Assistants Endpoint
      operationId: get_openai_assistants_endpoint_api_v2_assistant_list_assistants_get
      parameters:
        - name: order
          in: query
          required: false
          schema:
            type: string
            description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending
              order.
            default: desc
            title: Order
          description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
            default: 20
            title: Limit
          description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssistantsResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/assistant/modify_assistant/{assistant_id}:
    post:
      tags:
        - Assistants V2
      summary: Modify Assistant
      operationId: modify_assistant_api_v2_assistant_modify_assistant__assistant_id__post
      parameters:
        - name: assistant_id
          in: path
          required: true
          schema:
            type: string
            title: Assistant Id
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyAssistantRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assistant"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/assistant/delete_assistant/{assistant_id}:
    delete:
      tags:
        - Assistants V2
      summary: Delete Assistant
      operationId: delete_assistant_api_v2_assistant_delete_assistant__assistant_id__delete
      parameters:
        - name: assistant_id
          in: path
          required: true
          schema:
            type: string
            description: The ID of the assistant to delete
            title: Assistant Id
          description: The ID of the assistant to delete
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssistantResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/runs/create_thread_and_run:
    post:
      tags:
        - Runs V2
      summary: Create Thread And Run Endpoint
      operationId: create_thread_and_run_endpoint_api_v2_runs_create_thread_and_run_post
      parameters:
        - name: openai_api_key
          in: query
          required: false
          schema:
            type: string
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateThreadRunRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                title: Response Create Thread And Run Endpoint Api V2 Runs Create Thread And Run Post
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/messages/list_messages/threads/{thread_id}/messages:
    get:
      tags:
        - Messages
      summary: List Messages Endpoint
      operationId: list_messages_endpoint_api_v2_messages_list_messages_threads__thread_id__messages_get
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            title: Thread Id
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
            default: 20
            title: Limit
          description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
        - name: order
          in: query
          required: false
          schema:
            type: string
            description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending
              order.
            default: desc
            title: Order
          description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMessagesResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/messages/create_message/threads/{thread_id}/messages:
    post:
      tags:
        - Messages
      summary: Create Message Endpoint
      operationId: create_message_endpoint_api_v2_messages_create_message_threads__thread_id__messages_post
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
            title: Thread Id
        - name: openai_api_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Optional OpenAI API key
            title: Openai Api Key
          description: Optional OpenAI API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMessageRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMessageResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/create_vector_store:
    post:
      tags:
        - Vector Stores
      summary: Create Vector Store Endpoint
      operationId: create_vector_store_endpoint_api_v2_vector_stores_create_vector_store_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVectorStoreRequest"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VectorStoreResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/list_vector_stores:
    get:
      tags:
        - Vector Stores
      summary: List Vector Stores Endpoint
      operationId: list_vector_stores_endpoint_api_v2_vector_stores_list_vector_stores_get
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: A limit on the number of objects to be returned. Limit can range between 1 and 100.
            default: 20
            title: Limit
          description: A limit on the number of objects to be returned. Limit can range between 1 and 100.
        - name: order
          in: query
          required: false
          schema:
            type: string
            description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending
              order.
            default: desc
            title: Order
          description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.
        - name: after
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: A cursor for use in pagination. after is an object ID that defines your place in the list.
            title: After
          description: A cursor for use in pagination. after is an object ID that defines your place in the list.
        - name: before
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: A cursor for use in pagination. before is an object ID that defines your place in the list.
            title: Before
          description: A cursor for use in pagination. before is an object ID that defines your place in the list.
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVectorStoresResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/retrieve_vector_store/{vector_store_id}:
    get:
      tags:
        - Vector Stores
      summary: Retrieve Vector Store Endpoint
      operationId: retrieve_vector_store_endpoint_api_v2_vector_stores_retrieve_vector_store__vector_store_id__get
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VectorStoreResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/delete_vector_store/{vector_store_id}:
    delete:
      tags:
        - Vector Stores
      summary: Delete Vector Store Endpoint
      operationId: delete_vector_store_endpoint_api_v2_vector_stores_delete_vector_store__vector_store_id__delete
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVectorStoreResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/create_vector_store_file/{vector_store_id}/files:
    post:
      tags:
        - Vector Store Files V2
      summary: Create Vector Store File Endpoint
      operationId: create_vector_store_file_endpoint_api_v2_vector_stores_create_vector_store_file__vector_store_id__files_post
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVectorStoreFileRequest"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VectorStoreFileResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/list_vector_store_files/{vector_store_id}/files:
    get:
      tags:
        - Vector Store Files V2
      summary: List Vector Store Files Endpoint
      operationId: list_vector_store_files_endpoint_api_v2_vector_stores_list_vector_store_files__vector_store_id__files_get
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: A limit on the number of objects to be returned. Limit can range between 1 and 100.
            default: 20
            title: Limit
          description: A limit on the number of objects to be returned. Limit can range between 1 and 100.
        - name: order
          in: query
          required: false
          schema:
            type: string
            description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending
              order.
            default: desc
            title: Order
          description: Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order.
        - name: after
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: A cursor for use in pagination. after is an object ID that defines your place in the list.
            title: After
          description: A cursor for use in pagination. after is an object ID that defines your place in the list.
        - name: before
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: A cursor for use in pagination. before is an object ID that defines your place in the list.
            title: Before
          description: A cursor for use in pagination. before is an object ID that defines your place in the list.
        - name: filter
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Filter by file status. One of in_progress, completed, failed, cancelled.
            title: Filter
          description: Filter by file status. One of in_progress, completed, failed, cancelled.
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVectorStoreFilesResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/delete_vector_store_file/{vector_store_id}/files/{file_id}:
    delete:
      tags:
        - Vector Store Files V2
      summary: Delete Vector Store File Endpoint
      operationId: delete_vector_store_file_endpoint_api_v2_vector_stores_delete_vector_store_file__vector_store_id__files__file_id__delete
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
        - name: file_id
          in: path
          required: true
          schema:
            type: string
            title: File Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVectorStoreFileResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/vector_stores/retrieve_vector_store_file/{vector_store_id}/files/{file_id}:
    get:
      tags:
        - Vector Store Files V2
      summary: Retrieve Vector Store File Endpoint
      operationId: retrieve_vector_store_file_endpoint_api_v2_vector_stores_retrieve_vector_store_file__vector_store_id__files__file_id__get
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
            title: Vector Store Id
        - name: file_id
          in: path
          required: true
          schema:
            type: string
            title: File Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VectorStoreFileResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/files/upload:
    post:
      tags:
        - Files V2
      summary: Upload File Endpoint
      operationId: upload_file_endpoint_api_v2_files_upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_file_endpoint_api_v2_files_upload_post"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadFileResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v2/files/list:
    get:
      tags:
        - Files V2
      summary: List Files Endpoint
      operationId: list_files_endpoint_api_v2_files_list_get
      parameters:
        - name: purpose
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: Filter by file purpose
            title: Purpose
          description: Filter by file purpose
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFilesResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Assistant:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        created_at:
          type: integer
          title: Created At
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        model:
          type: string
          title: Model
        instructions:
          anyOf:
            - type: string
            - type: "null"
          title: Instructions
        tools:
          items: {}
          type: array
          title: Tools
          default: []
        tool_resources:
          anyOf:
            - type: object
            - type: "null"
          title: Tool Resources
        metadata:
          additionalProperties:
            type: string
          type: object
          title: Metadata
          default: {}
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
        response_format:
          anyOf:
            - type: string
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Response Format
          default: auto
      type: object
      required:
        - id
        - object
        - created_at
        - name
        - description
        - model
        - instructions
        - temperature
        - top_p
      title: Assistant
    Body_upload_file_endpoint_api_v2_files_upload_post:
      properties:
        file:
          type: string
          format: binary
          title: File
        purpose:
          type: string
          title: Purpose
          default: "assistants"
        openai_api_key:
          type: string
          title: Openai Api Key
      type: object
      required:
        - file
        - purpose
        - openai_api_key
      title: Body_upload_file_endpoint_api_v2_files_upload_post
    Content:
      properties:
        type:
          type: string
          title: Type
        text:
          $ref: "#/components/schemas/TextContent"
      type: object
      required:
        - type
        - text
      title: Content
    CreateAssistantRequest:
      properties:
        model:
          type: string
          title: Model
          default: gpt-4o
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        instructions:
          anyOf:
            - type: string
            - type: "null"
          title: Instructions
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Metadata
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
          default: 1
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
          default: 1
        response_format:
          anyOf:
            - {}
            - type: "null"
          title: Response Format
          default: auto
      type: object
      title: CreateAssistantRequest
    CreateAssistantWithToolsRequest:
      properties:
        model:
          type: string
          title: Model
          default: gpt-4o
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
          description: The name of the assistant
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
          description: The description of the assistant
        instructions:
          anyOf:
            - type: string
            - type: "null"
          title: Instructions
          description: The system instructions that the assistant uses
        tools:
          items:
            $ref: "#/components/schemas/ToolDefinition"
          type: array
          title: Tools
          description: A list of tools enabled on the assistant
        file_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: File Ids
          description: A list of file IDs attached to the assistant
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Metadata
          description: Set of key-value pairs that can be attached to an object
      type: object
      title: CreateAssistantWithToolsRequest
    CreateMessageRequest:
      properties:
        role:
          type: string
          title: Role
        content:
          type: string
          title: Content
        attachments:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Attachments
        metadata:
          anyOf:
            - type: object
            - type: "null"
          title: Metadata
      type: object
      required:
        - role
        - content
      title: CreateMessageRequest
    CreateMessageResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        created_at:
          type: integer
          title: Created At
        thread_id:
          type: string
          title: Thread Id
        role:
          type: string
          title: Role
        content:
          items:
            $ref: "#/components/schemas/Content"
          type: array
          title: Content
        attachments:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Attachments
        metadata:
          type: object
          title: Metadata
      type: object
      required:
        - id
        - object
        - created_at
        - thread_id
        - role
        - content
        - metadata
      title: CreateMessageResponse
    CreateThreadRunRequest:
      properties:
        assistant_id:
          type: string
          title: Assistant Id
        thread:
          $ref: "#/components/schemas/Thread"
        tools:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          title: Tools
      type: object
      required:
        - assistant_id
        - thread
      title: CreateThreadRunRequest
    CreateVectorStoreFileRequest:
      properties:
        file_id:
          type: string
          title: File Id
      type: object
      required:
        - file_id
      title: CreateVectorStoreFileRequest
    CreateVectorStoreRequest:
      properties:
        file_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: File Ids
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        expires_after:
          anyOf:
            - additionalProperties:
                type: integer
              type: object
            - type: "null"
          title: Expires After
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Metadata
      type: object
      title: CreateVectorStoreRequest
    DeleteAssistantResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        deleted:
          type: boolean
          title: Deleted
      type: object
      required:
        - id
        - object
        - deleted
      title: DeleteAssistantResponse
    DeleteVectorStoreFileResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        deleted:
          type: boolean
          title: Deleted
      type: object
      required:
        - id
        - object
        - deleted
      title: DeleteVectorStoreFileResponse
    DeleteVectorStoreResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        deleted:
          type: boolean
          title: Deleted
      type: object
      required:
        - id
        - object
        - deleted
      title: DeleteVectorStoreResponse
    FileCounts:
      properties:
        in_progress:
          type: integer
          title: In Progress
        completed:
          type: integer
          title: Completed
        failed:
          type: integer
          title: Failed
        cancelled:
          type: integer
          title: Cancelled
        total:
          type: integer
          title: Total
      type: object
      required:
        - in_progress
        - completed
        - failed
        - cancelled
        - total
      title: FileCounts
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IncompleteDetails:
      properties:
        reason:
          type: string
          title: Reason
      type: object
      required:
        - reason
      title: IncompleteDetails
    ListAssistantsResponse:
      properties:
        object:
          type: string
          title: Object
        data:
          items:
            $ref: "#/components/schemas/Assistant"
          type: array
          title: Data
        first_id:
          type: string
          title: First Id
        last_id:
          type: string
          title: Last Id
        has_more:
          type: boolean
          title: Has More
      type: object
      required:
        - object
        - data
        - first_id
        - last_id
        - has_more
      title: ListAssistantsResponse
    ListFilesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/UploadFileResponse"
          type: array
          title: Data
        object:
          type: string
          title: Object
      type: object
      required:
        - data
        - object
      title: ListFilesResponse
    ListMessagesResponse:
      properties:
        object:
          type: string
          title: Object
        data:
          items:
            $ref: "#/components/schemas/Message-Output"
          type: array
          title: Data
        first_id:
          anyOf:
            - type: string
            - type: "null"
          title: First Id
        last_id:
          anyOf:
            - type: string
            - type: "null"
          title: Last Id
        has_more:
          type: boolean
          title: Has More
      type: object
      required:
        - object
        - data
        - has_more
      title: ListMessagesResponse
    ListVectorStoreFilesResponse:
      properties:
        object:
          type: string
          title: Object
        data:
          items:
            $ref: "#/components/schemas/VectorStoreFileResponse"
          type: array
          title: Data
        first_id:
          type: string
          title: First Id
        last_id:
          type: string
          title: Last Id
        has_more:
          type: boolean
          title: Has More
      type: object
      required:
        - object
        - data
        - first_id
        - last_id
        - has_more
      title: ListVectorStoreFilesResponse
    ListVectorStoresResponse:
      properties:
        object:
          type: string
          title: Object
        data:
          items:
            $ref: "#/components/schemas/VectorStoreResponse"
          type: array
          title: Data
        first_id:
          anyOf:
            - type: string
            - type: "null"
          title: First Id
        last_id:
          anyOf:
            - type: string
            - type: "null"
          title: Last Id
        has_more:
          type: boolean
          title: Has More
      type: object
      required:
        - object
        - data
        - has_more
      title: ListVectorStoresResponse
    Message-Input:
      properties:
        role:
          type: string
          title: Role
          default: user
        content:
          type: string
          title: Content
      type: object
      required:
        - content
      title: Message
    Message-Output:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        created_at:
          type: integer
          title: Created At
        thread_id:
          type: string
          title: Thread Id
        status:
          anyOf:
            - type: string
            - type: "null"
          title: Status
        incomplete_details:
          anyOf:
            - $ref: "#/components/schemas/IncompleteDetails"
            - type: "null"
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        incomplete_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Incomplete At
        role:
          type: string
          title: Role
        content:
          items:
            $ref: "#/components/schemas/Content"
          type: array
          title: Content
        assistant_id:
          anyOf:
            - type: string
            - type: "null"
          title: Assistant Id
        run_id:
          anyOf:
            - type: string
            - type: "null"
          title: Run Id
        attachments:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Attachments
        metadata:
          type: object
          title: Metadata
      type: object
      required:
        - id
        - object
        - created_at
        - thread_id
        - role
        - content
        - metadata
      title: Message
    ModifyAssistantRequest:
      properties:
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        instructions:
          anyOf:
            - type: string
            - type: "null"
          title: Instructions
        tools:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: object
              type: array
            - type: "null"
          title: Tools
        tool_resources:
          anyOf:
            - type: object
            - type: "null"
          title: Tool Resources
        metadata:
          anyOf:
            - additionalProperties:
                anyOf:
                  - type: string
                  - type: integer
              type: object
            - type: "null"
          title: Metadata
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
        response_format:
          anyOf:
            - type: string
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Response Format
      type: object
      title: ModifyAssistantRequest
    RunThreadRequest:
      properties:
        thread_id:
          type: string
          title: Thread Id
        assistant_id:
          type: string
          title: Assistant Id
        tools:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          title: Tools
      type: object
      required:
        - thread_id
        - assistant_id
      title: RunThreadRequest
    TextContent:
      properties:
        value:
          type: string
          title: Value
        annotations:
          items: {}
          type: array
          title: Annotations
      type: object
      required:
        - value
        - annotations
      title: TextContent
    Thread:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/Message-Input"
          type: array
          title: Messages
      type: object
      required:
        - messages
      title: Thread
    ToolDefinition:
      properties:
        type:
          type: string
          title: Type
        function:
          type: object
          title: Function
      type: object
      required:
        - type
        - function
      title: ToolDefinition
    UploadFileResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        bytes:
          type: integer
          title: Bytes
        created_at:
          type: integer
          title: Created At
        filename:
          type: string
          title: Filename
        purpose:
          type: string
          title: Purpose
      type: object
      required:
        - id
        - object
        - bytes
        - created_at
        - filename
        - purpose
      title: UploadFileResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    VectorStoreFileResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        created_at:
          type: integer
          title: Created At
        usage_bytes:
          type: integer
          title: Usage Bytes
        vector_store_id:
          type: string
          title: Vector Store Id
        status:
          type: string
          title: Status
        last_error:
          anyOf:
            - type: string
            - type: "null"
          title: Last Error
      type: object
      required:
        - id
        - object
        - created_at
        - usage_bytes
        - vector_store_id
        - status
      title: VectorStoreFileResponse
    VectorStoreResponse:
      properties:
        id:
          type: string
          title: Id
        object:
          type: string
          title: Object
        created_at:
          type: integer
          title: Created At
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        usage_bytes:
          anyOf:
            - type: integer
            - type: "null"
          title: Usage Bytes
        status:
          type: string
          title: Status
        expires_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Expires At
        last_active_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Last Active At
        file_counts:
          $ref: "#/components/schemas/FileCounts"
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Metadata
      type: object
      required:
        - id
        - object
        - created_at
        - status
        - file_counts
      title: VectorStoreResponse
