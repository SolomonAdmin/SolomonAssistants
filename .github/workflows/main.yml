name: Deploy to ECR and ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: solomonassistantsapp
  ECS_SERVICE: sap               
  ECS_CLUSTER: sap2              
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: solomonassistantsapp3

permissions:
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" >> $GITHUB_ENV

    - name: Echo Image URI
      run: |
        echo "Image URI: $IMAGE_URI"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.IMAGE_URI }}

    - name: Echo Rendered Task Definition
      run: |
        echo "Rendered Task Definition: ${{ steps.task-def.outputs.task-definition }}"
        echo "Service: ${{ env.ECS_SERVICE }}"
        echo "Cluster: ${{ env.ECS_CLUSTER }}"

    - name: Adjust Service Name
      run: |
        if [[ $ECS_SERVICE == AppECS-* ]]; then
          ECS_SERVICE=${ECS_SERVICE#AppECS-}
          echo "Adjusted ECS_SERVICE to $ECS_SERVICE"
          echo "ECS_SERVICE=$ECS_SERVICE" >> $GITHUB_ENV
        fi

    - name: Debug Before Deployment
      run: |
        echo "Service: ${{ env.ECS_SERVICE }}"
        echo "Cluster: ${{ env.ECS_CLUSTER }}"
        echo "Task Definition: ${{ steps.task-def.outputs.task-definition }}"

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}  # This will now be 'sap'
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true